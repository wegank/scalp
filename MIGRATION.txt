# Revision 54, 01-21-2018:

user interface:
  - Mostly changing pass-by-value to pass-by-const-reference.
    Recompilation should be fine.
  - getName for Variables now returns a const reference, not a copy.


solver interface:
  - changing the Signature of

      - ScaLP::SolverBackend::addVariables
      - ScaLP::SolverBackend::addConstraints

    they take const references instead of copies.
    Furthermore addConstraints uses std::vector instead of std::list.
    
  - getName for Variables now returns a const reference, not a copy.

# Revision 50, 01-11-2018:

both:
  - ScaLP::status::TIMEOUT is now splitted into
    ScaLP::status::TIMEOUT_FEASIBLE and
    ScaLP::status::TIMEOUT_INFEASIBLE

    TIMEOUT_FEASIBLE is a timeout with a feasible solution.
    TIMEOUT_INFEASIBLE is a timeout without solution.

    At the moment LPSolve gives FEASIBLE instead of TIMEOUT_FEASIBLE due to
    limitations.

# Revision 49, 01-04-2018:

user interface:
  - recompile your code

solver interface:
  - The results are not saved in ScaLP::SolverBackend::res anymore.
    Instead create a ScaLP::Result in your solve-function and return it in a
    pair with the status:

      std::pair<ScaLP::status,ScaLP::Result> solve()
      {
        ScaLP::Result res;
        ScaLP::status stat;
        ...
        return {stat,res};
      }

    On failure or missing results return an empty(default constructed) result.
